-- MySQL Script generated by MySQL Workbench
-- Tue Jul 27 19:34:23 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema bd_mecanica
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema bd_mecanica
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `bd_mecanica` DEFAULT CHARACTER SET utf8 ;
USE `bd_mecanica` ;

-- -----------------------------------------------------
-- Table `bd_mecanica`.`clientes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_mecanica`.`clientes` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `cpf` BIGINT(11) UNSIGNED NULL COMMENT 'Informar CPF do cliente.',
  `cnpj` BIGINT(14) UNSIGNED NULL COMMENT 'Informar CNPJ caso o cliente seja uma empresa.',
  `nome` VARCHAR(250) NOT NULL COMMENT 'Informar o nome do cliente.\n',
  `data_nascimento` DATE NULL COMMENT 'Informar a data de nascimento do cliente.',
  `telefone` BIGINT(11) UNSIGNED NOT NULL COMMENT 'Informar telefone de contato do cliente.',
  `email` VARCHAR(250) NULL COMMENT 'Informar e-mail de contato do cliente',
  `data_cadastro` DATE NOT NULL COMMENT 'Campo deverá ser preenchido automaticamente.',
  `logradouro` VARCHAR(150) NOT NULL COMMENT 'Informar o logradouro.\nEx: Avenida, Rua, etc...\n',
  `bairro` VARCHAR(100) NOT NULL COMMENT 'Informar bairro do cliente',
  `numero_logradouro` INT(5) NULL COMMENT 'Informar numero da casa ou apartamento do cliente.',
  `complemento_logradouro` VARCHAR(100) NULL COMMENT 'Informar complemento do endereço do cliente.\nEx:Proximo ao Senai Norte I.',
  `municipio` VARCHAR(100) NOT NULL COMMENT 'Informar o municipio que do Cliente.\nEx: Joinville',
  `estado` CHAR(2) NOT NULL COMMENT 'Será Informado o Estado do cliente.\nEx: SC, PR....',
  `cep` INT(8) NULL COMMENT 'Informar o CEP do CLiente.',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `cpf_UNIQUE` (`cpf` ASC) VISIBLE,
  UNIQUE INDEX `cnpj_UNIQUE` (`cnpj` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bd_mecanica`.`carros`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_mecanica`.`carros` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `placa` VARCHAR(7) NOT NULL COMMENT 'Informar Placa do Carro.',
  `renavam` BIGINT(11) NULL COMMENT 'Informar Renavam do Carro.\n',
  `marca` VARCHAR(50) NOT NULL COMMENT 'Será insirida a Marca do Carro.\nEX: Fiat',
  `modelo` VARCHAR(45) NOT NULL COMMENT 'Será inserido o nome do modelo:\nEX: Uno',
  `ano_modelo` INT(4) NOT NULL COMMENT 'Será inserido o ano do modelo:\nEX: 2013',
  `ano_fabricado` INT(4) NOT NULL COMMENT 'Será inserido o ano fabricado do carro:\nEX: 2012',
  UNIQUE INDEX `placa_UNIQUE` (`placa` ASC) VISIBLE,
  UNIQUE INDEX `renavam_UNIQUE` (`renavam` ASC) VISIBLE,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bd_mecanica`.`cargos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_mecanica`.`cargos` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(30) NOT NULL COMMENT 'Nome do Cargo.',
  `descricao` VARCHAR(100) NOT NULL COMMENT 'Descrição do cargo.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bd_mecanica`.`funcionarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_mecanica`.`funcionarios` (
  `matricula` TINYINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(250) NOT NULL COMMENT 'Informar nome do funcionario.',
  `cpf` BIGINT(11) UNSIGNED NOT NULL COMMENT 'Informar CPF do funcionario.',
  `telefone_contato` BIGINT(11) UNSIGNED NOT NULL COMMENT 'Telefone para contato do funcionario.',
  `senha` VARCHAR(45) NOT NULL COMMENT 'Senha do sistema',
  `login` VARCHAR(45) NOT NULL COMMENT 'Login do funcionario no sistema',
  `cargos_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`matricula`),
  UNIQUE INDEX `cpf_UNIQUE` (`cpf` ASC) VISIBLE,
  INDEX `fk_funcionarios_cargos1_idx` (`cargos_id` ASC) VISIBLE,
  CONSTRAINT `fk_funcionarios_cargos1`
    FOREIGN KEY (`cargos_id`)
    REFERENCES `bd_mecanica`.`cargos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bd_mecanica`.`orcamentos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_mecanica`.`orcamentos` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `descricao_produtos` TEXT NOT NULL COMMENT 'Informar a descrição dos produtos que serão vendidos.\nEX: Amortecedor gol G5 - R$70,00 / Coxin Gol G5 - R$ 65,00',
  `valor_total_produtos` DECIMAL(8,2) NOT NULL COMMENT 'Informar o valor total dos produtos que serão vendidos.',
  `descricao_servicos` TEXT NOT NULL COMMENT 'Descrição dos serviços que serão prestados.\nEX: Troca de amortecedor - R$50\n',
  `valor_total_servicos` DECIMAL(8,2) NOT NULL COMMENT 'Informar o valor total dos serviços que serão prestados.',
  `data` DATE NOT NULL COMMENT 'Data que foi gerado o orçamento.\n',
  `status` TINYINT NOT NULL COMMENT '1 - Aprovado\n2- Não Aprovado\n3 - Aguardando aprovação',
  `tipoManutencao` TINYINT NOT NULL COMMENT 'Informa o tipo de serviço que está sendo realizado.\n\n1- Manutenção Corretiva;\n2- Manutenção Preventiva;',
  `carros_id` INT UNSIGNED NOT NULL,
  `clientes_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_orcamentos_carros1_idx` (`carros_id` ASC) VISIBLE,
  INDEX `fk_orcamentos_clientes1_idx` (`clientes_id` ASC) VISIBLE,
  CONSTRAINT `fk_orcamentos_carros1`
    FOREIGN KEY (`carros_id`)
    REFERENCES `bd_mecanica`.`carros` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orcamentos_clientes1`
    FOREIGN KEY (`clientes_id`)
    REFERENCES `bd_mecanica`.`clientes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bd_mecanica`.`ordens_de_servicos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_mecanica`.`ordens_de_servicos` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `km_atual` BIGINT(6) ZEROFILL UNSIGNED NOT NULL COMMENT 'Informar quantos KM o carro chegou na Oficina.',
  `data_cadastro` DATE NOT NULL COMMENT 'Data de cadastro da O.S será feita automaticamente pelo sistema.',
  `data_conclusao` DATE NULL COMMENT 'Informar a data que foi concluido a O.S.',
  `data_previsao` DATE NOT NULL COMMENT 'Informar a data que está prevista a conclusão do serviço.',
  `status` TINYINT NOT NULL COMMENT '1 - Em Aberto\n2 - Concluida\n3 - Atrasada',
  `valor_final` DECIMAL(8,2) NOT NULL COMMENT 'Inserir o valor final.\nEX: Caso tenha que fazer hora extra, ou se for dado algum desconto para o cliente.',
  `funcionarios_matricula` TINYINT UNSIGNED NOT NULL,
  `orcamentos_id` INT NOT NULL,
  `informacoes_adicionais` TINYTEXT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_ordens_de_servicos_funcionarios1_idx` (`funcionarios_matricula` ASC) VISIBLE,
  INDEX `fk_ordens_de_servicos_orcamentos1_idx` (`orcamentos_id` ASC) VISIBLE,
  CONSTRAINT `fk_ordens_de_servicos_funcionarios1`
    FOREIGN KEY (`funcionarios_matricula`)
    REFERENCES `bd_mecanica`.`funcionarios` (`matricula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ordens_de_servicos_orcamentos1`
    FOREIGN KEY (`orcamentos_id`)
    REFERENCES `bd_mecanica`.`orcamentos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
